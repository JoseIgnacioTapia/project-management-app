// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

enum TaskState {
  PENDING
  IN_PROGRESS
  COMPLETED
}

model User {
  id        String     @id @default(cuid())
  name      String
  email     String     @unique
  password  String
  role      UserRole   @default(USER)
  projects  ProjectUser[]  // Relation many to many with the intermediate table ProjectUser
  tasks     Task[]     // Relation one to many with Task
}

model Project {
  id           Int          @id @default(autoincrement())
  name         String
  description  String
  start_date   DateTime
  end_date     DateTime
  users        ProjectUser[]  // Relation many to many with the intermediate table ProjectUser
  tasks        Task[]       // Relation one to many with Task
}

model Task {
  id           Int       @id @default(autoincrement())
  title        String
  description  String
  state        TaskState @default(PENDING)
  project_id   Int
  project      Project @relation(fields: [project_id], references: [id])
  assigned_to  String
  user         User    @relation(fields: [assigned_to], references: [id])
}

model ProjectUser {
  user_id     String
  project_id  Int

  user       User     @relation(fields: [user_id], references: [id])
  project    Project  @relation(fields: [project_id], references: [id])

  @@id([user_id, project_id])
}
